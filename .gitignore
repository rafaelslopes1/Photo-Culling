# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include JetBrains specific gitignore files.
#  https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
.idea/

# VS Code
.vscode/
*.code-workspace

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Project specific
# Folders with processed images
output/
processed/
selected/
filtered/
results/

# Model files (NSFW detection models can be large)
*.h5
*.pb
*.pth
*.onnx
models/

# Sample/test images folders
samples/
test_images/
demo_images/

# Temporary files
temp/
tmp/
*.tmp

# Log files
*.log
logs/

# Configuration files with sensitive data
config.json
settings.json

input/
output/

**/*.JPG

# ==========================================
# PHOTO CULLING SYSTEM - SPECIFIC RULES
# ==========================================

# Input images - never commit user photos
data/input/*.jpg
data/input/*.jpeg
data/input/*.png
data/input/*.JPG
data/input/*.JPEG
data/input/*.PNG
data/input/*.gif
data/input/*.GIF

# Generated visualizations - selective exclusion
data/quality/visualizations/*_detection_test.png
data/quality/visualizations/*_multi_person_analysis.png
data/quality/visualizations/temp_*.png
data/quality/visualizations/test_*.png
data/quality/visualizations/debug_*.png
# Keep important reports and summaries
!data/quality/visualizations/FINAL_*.png
!data/quality/visualizations/*_summary.png
!data/quality/visualizations/*_report.png
!data/quality/visualizations/*.md

# Database files - keep structure, ignore journals
*.db-journal
*.db-wal
*.db-shm

# Large model files - selective exclusion
data/models/*.h5
data/models/*.pkl
data/models/*.pt
data/models/*.pth
data/models/*.onnx
# Keep essential models
!data/models/haarcascade_frontalface_default.xml
!data/models/best_model.joblib
!data/models/current_model.joblib
!data/models/*_metadata.json

# Temporary analysis files
*_temp.json
*_debug.json
*_cache.json
analysis_temp/
detection_temp/

# Performance and debug logs
performance_*.log
timing_*.log
memory_*.log
debug_*.log